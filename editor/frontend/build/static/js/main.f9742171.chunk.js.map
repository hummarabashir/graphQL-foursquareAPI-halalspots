{"version":3,"sources":["pages/LandingPage/LandingPage.js","components/Header/Header.js","components/StateCard/StateCard.js","components/StateDetails/StateDetails.js","pages/StatePage/StatePage.js","index.js"],"names":["LandingPage","navigate","useNavigate","Map","Component","constructor","arguments","mapHandler","event","stateName","target","innerHTML","replace","state","stateCode","dataset","name","render","React","createElement","USAMap","onClick","this","defaultFill","className","Header","Link","to","StateCard","_ref","park","setCurrPark","location","region","StateDetails","closed","locality","postcode","latitude","longitude","GET_VENUES","gql","StatePage","useLocation","parks","setParks","useState","currPark","allParks","setAllParks","loading","error","data","useQuery","variables","message","Fragment","length","venues","map","item","key","id","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","createRoot","document","getElementById","StrictMode","ApolloProvider","Router","Routes","Route","path","element","Landing","StateInfo"],"mappings":"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","file":"static/js/main.f9742171.chunk.js","sourcesContent":["import React from \"react\";\n\nimport USAMap from \"react-usa-map\";\nimport { Component } from \"react\";\nimport \"./LandingPage.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction LandingPage() {\n  const navigate = useNavigate();\n  class Map extends Component {\n    // This function is required by imported USAMap\n    mapHandler = (event) => {\n      let stateName = event.target.innerHTML\n        .replace(\"<title>\", \"\")\n        .replace(\"</title>\", \"\");\n      navigate(\"/state\", {\n        state: { stateName: stateName, stateCode: event.target.dataset.name },\n      });\n    };\n\n    render() {\n      return (\n        // This is a imported component that provides a clickable map of the United States\n        <USAMap onClick={this.mapHandler} defaultFill=\"rgb(247, 166, 15)\" />\n      );\n    }\n  }\n\n  return (\n    <div className=\"landing-page-container\">\n      <div className=\"logo-container\">\n        {/* <div className=\"retro\">National Halal Spot Explorer</div> */}\n        {/* <img src=\"../../assets/logo.png\" /> */}\n      </div>\n\n      <h1>Click on a state to view its national halal spots!</h1>\n      <Map />\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <nav>\n      <div className=\"header-link-container\">\n        <Link to=\"/\" className=\"header-link\">\n          Back to State Selector\n        </Link>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./StateCard.css\";\n\nfunction StateCard({ park, setCurrPark }) {\n  return (\n    <div className=\"state-card\" onClick={() => setCurrPark(park)}>\n      <h3>\n        {park.location.region}-{park.name}\n      </h3>\n    </div>\n  );\n}\n\nexport default StateCard;\n","import React from \"react\";\n\nimport \"./StateDetails.css\";\n// import { useState, useEffect } from \"react\";\n\nfunction StateDetails({ park }) {\n  return (\n    <div className=\"state-details\">\n      <h1>{park.name}</h1>\n      <p>Open: {park.closed}</p>\n      <p>Address: {park.location}</p>\n      <p>Locality: {park.locality}</p>\n      <p>Postcode: {park.postcode}</p>\n      <p>Region: {park.region}</p>\n      <p>Latitude: {park.latitude}</p>\n      <p>Longitude: {park.longitude}</p>\n    </div>\n  );\n}\n\nexport default StateDetails;\n","import React from \"react\";\n\nimport Header from \"../../components/Header/Header\";\nimport StateCard from \"../../components/StateCard/StateCard\";\nimport StateDetails from \"../../components/StateDetails/StateDetails\";\nimport { useLocation } from \"react-router-dom\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"./StatePage.css\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_VENUES = gql`\n  query GetVenues($region: String!) {\n    venues(region: $region) {\n      id\n      name\n      location\n      locality\n      postcode\n      region\n      closed\n      latitude\n      longitude\n    }\n  }\n`;\n\nfunction StatePage() {\n  const location = useLocation();\n  const [parks, setParks] = useState([]);\n  const [currPark, setCurrPark] = useState([]);\n  const [allParks, setAllParks] = useState([]);\n  const stateCode = location.state.stateCode;\n  const stateName = location.state.stateName;\n  const { loading, error, data } = useQuery(GET_VENUES, {\n    variables: { region: `${stateName}` },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <>\n    <div className=\"state-page-container\">\n      <Header />\n      <h1 className=\"state-name\">\n        {location.state.stateCode === \"DC\"\n          ? \"Washington, D.C.\"\n          : location.state.stateName}\n      </h1>\n   \n      <div className=\"sub-state-page-container\">\n      <div className=\"state-cards-container\">\n        {data.length === 0 ? (\n          <h3 className=\"no-state\">\n            None of the current state's sites contain all of the selected\n            amenities.\n          </h3>\n        ) : (\n          <>\n            {data.venues.map((item) => {\n              return (\n                <StateCard\n                  park={item}\n                  setCurrPark={setCurrPark}\n                  key={item.id}\n                />\n              );\n            })}\n          </>\n        )}\n      </div>\n      {currPark.length === 0 ? (\n        <div className=\"no-state-details\">\n          <h3>Click on a Halal Spot to view its details!</h3>\n        </div>\n      ) : (\n        <>\n          <div className=\"state-details-container\">\n            <StateDetails park={currPark} />\n          </div>\n        </>\n      )}\n    </div>\n    </div>\n    </>\n  );\n}\n\nexport default StatePage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { InMemoryCache } from \"@apollo/client\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport Landing from \"./pages/LandingPage/LandingPage\";\nimport StateInfo from \"./pages/StatePage/StatePage\";\n// import \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst client = new ApolloClient({\n  // uri: \"http://localhost:4000\",\n  uri: \"/.netlify/functions/graphql\",\n  cache: new InMemoryCache(),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"/state\" element={<StateInfo />} />\n        </Routes>\n      </Router>\n    </ApolloProvider>\n  </React.StrictMode>\n);"],"sourceRoot":""}