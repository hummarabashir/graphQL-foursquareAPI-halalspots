{"ast":null,"code":"import * as React from \"rehackt\";\nvar INIT = {};\nexport function useLazyRef(getInitialValue) {\n  var ref = React.useRef(INIT);\n  if (ref.current === INIT) {\n    ref.current = getInitialValue();\n  }\n  return ref;\n}","map":{"version":3,"sources":["../../../../src/react/hooks/internal/useLazyRef.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,SAAS;AAEhC,IAAM,IAAI,GAAG,CAAA,CAAE;AAEf,OAAM,SAAU,UAAU,CAAI,eAAwB,EAAA;EACpD,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAI,IAAoB,CAAC;EAEjD,IAAI,GAAG,CAAC,OAAO,KAAK,IAAI,EAAE;IACxB,GAAG,CAAC,OAAO,GAAG,eAAe,CAAA,CAAE;EACjC;EAEA,OAAO,GAAG;AACZ","sourcesContent":["import * as React from \"rehackt\";\n\nconst INIT = {};\n\nexport function useLazyRef<T>(getInitialValue: () => T) {\n  const ref = React.useRef<T>(INIT as unknown as T);\n\n  if (ref.current === INIT) {\n    ref.current = getInitialValue();\n  }\n\n  return ref;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}